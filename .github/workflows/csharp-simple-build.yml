# Workflow to build and test the csharp version
name: csharp-simple-build

# Controls when the action will run.
on:
  push:
    paths:
      - 'csharp-simple/**'
      - '**/csharp-simple-build.yml'
  pull_request:
    paths:
      - 'csharp-simple/**'
      - '**/csharp-simple-build.yml'

defaults:
  run:
    working-directory: ./csharp-simple

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DB_USER: root
      DB_OLD_PASSWORD: root
      DB_PASSWORD: mysql

    steps:
      - name: checkout source
        uses: actions/checkout@v2

      - name: Start MYSQL and import DB
        run: |
          sudo systemctl start mysql
          mysqladmin --user=${{ env.DB_USER }} --password=${{ env.DB_OLD_PASSWORD }} password ${{ env.DB_PASSWORD }}
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} < ../database/initDatabase.sql

      - name: Setup dotnet build
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: use nuget cache
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: install dependencies
        run: dotnet restore

      - name: build solution
        run: dotnet build

      - name: run unit tests
        run: dotnet test --logger "trx;logfilename=${GITHUB_WORKSPACE}/unit_test_results.xml"

      - name: Test Reporter
        uses: dorny/test-reporter@v1.4.3
        if: always()
        with:
          name: publish test results

          path: "unit_test_results.xml"
          reporter: dotnet-trx
          fail-on-error: false
